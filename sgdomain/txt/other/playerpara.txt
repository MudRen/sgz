编程上面玩家的参数

by fire on June 1998
in /std/base_obj.c nothing
in /std/container.c  // very important file. 
private int max_capacity = 10;
private static int capacity;
private mapping objects;
private string main_prep = "in";
private int contained_light;
private int contained_light_added;
-----------------------------SG MOUDLES ------------------------
in /sgdomain/modules/m_age.c
private int ag_day,ag_month;
in /sgdomain/modules/m_skills.c
private mapping sg_skills = ([]);
in /sgdomain/modules/m_ask.c
private string *answer_list = ({}); // list for answers
in /sgdomain/modules/m_sggift.c  // need seperate to several files
private int sg_wuli;  // 武力 from 10 to 30 with special weapon can be higher
private int sg_zhimou;  // 智谋 as above this are orignal one, can't changed
private int sg_meili; // 魅力
private int sg_exp; // this will increase during fight and . . .
private int sg_shengwang; // 声望 ; very important to judge player's level
private int sg_age; // 年龄;
private int sg_shouming; // 寿命 = max age over than that will die
private int sg_rongmao; // 容貌 from 10 to 30;
private int sg_cur_hp; //  if one is
private int sg_cur_max_hp; // from 100 and increase every year; before 30
                        // decrease after 50
private int sg_max_hp;  // the real max hp
private int sg_food;  // 粮草
private int sg_junzi; // 军资
private int sg_bing_number;  // 士兵数
private int sg_bing_max ;   //最大带兵数  导出值
private int sg_bing_shiqi;  // 士气
private int sg_bing_type;  // 兵种  0 步兵 1 骑兵 2 弓兵
private int sg_fight_value;  // 战斗力
private int sg_rank; // 官职
private string sg_zi;   // 字
static int is_hp_heal;  // 1 when auto heal needed 0 on need
in /sgdomain/modules/arrange_money.c
nothing 
-----------------------------CLASS------------------------
in /std/modules/m_damage_source.c
private int wield_bonus;	// useless
private string wield_type = "blow";  // useless
private object wielded_by;	// ?
static mapping def_combat_messages;
mapping combat_messages = ([]);
in /std/modules/m_save.c // maybe not used ?
private static int save_recurse;
private static mixed *saved = ({});
-----------------------------CLASS------------------------
in  /std/classes/combat_result.c
    /std/classes/bodyslot.c  // maybe useless ?
    /std/classes/sg_skill_class.c
nothing
-----------------------------OBJECT------------------------
in /std/object.c
private int is_keeping=0 ; // 1 will make player keep this stuff when left
in /std/object/flags.c
private static mapping flag_sets;
private static mapping non_persist_flags;
private        mapping persist_flags;
in /std/object/names.c
private static string array ids;
private static string array plurals;
private static string array adjs;
private string primary_id, primary_adj, chinese_id, unit;
in /std/object/description.c
private static mixed long;
private static mixed in_room_desc;
private string untouched_long; // maybe useless
in /std/object/size.c
private static int size = MEDIUM;
in /std/object/light.c
private int our_light;
in /std/object/properties.c
private static mapping sets ; // could be set by user ?
private mapping psets ;
in /std/object/move.c
private object last_location; // maybe useful in program ?
in /std/object/visible.c
nothing // has a flag INVIS maybe useless for sg ?
in /std/object/vsupport.c
things like direct_get_obj . . . should be considered by os
in /std/object/msg_recipient.c
nothing // it's better manage by os
in /std/object/hooks.c	// this program is quite hard to understand
private static mapping hooks = ([]); 
in /std/object/non_object.c
nothing here, function in this can be used after object has been
destroied , how ?
-----------------------------LIVING-------------------------
in /std/living.c
private string name, cname; //sigh
in /std/living/grammar.c
int gender;
in /std/living/messages.c
nothing
in /std/living/state_of_mind.c // need rewrite
private static int stunned, asleep, chance, prone;
-----------------------------MONSTER-------------------------
in /std/monster/base/heart_beat.c
static int   attacking; // determine fighting or not
in /std/monster/base/bodyslots.c
static mapping slots =  // seem no use
in     /std/monster/base/death.c
private string corpse_long;
private string corpse_filename = CORPSE;
in /std/monster/base/wield.c
private static object weapon;
static string weapon_type;
in /std/monster/base/target.c
private static object target;
private static int explicit; // if this is on, don't take a random choice.
                             // Attack the person we just switch_to()'ed
private static object array other_targets = ({});
in /std/monster/base/hit_points.c // will be deleted
private int hp = 1;
private int max_hp = 1;
private static int hp_time = time();
private int heal_rate = 60;
in /std/monster.c
in /std/monster/simple.c
in /std/monster/base.c
in /std/monster/base/results.c
in /std/monster/base/behaviors.c // this program need rewrite a lot
nothing here
-----------------------------BODY-------------------------
in /std/body.c
private string reply;
private string array channel_list = ({ });
private string plan;
private static object link;
private static int catching_scrollback;  ?
private mixed saved_items;
in /std/body/money.c
private   mapping money;  // money on body maybe can be deleted later ?
in /std/body/start.c 
private string start_location; // start location when player login
in /std/body/naming.c;  // some may be deleted
private string name = "神秘过路客";
private string describe;
private string invis_name;
private string nickname;
private string chinese_name;
in /std/body/title.c // function here will be adjusted
private string title;
============================OS=======================================
in /std/modules/m_messages.c // very important
mapping messages = ([]);
mapping def_messages = ([]);
in /std/modules/m_grammar.c
nothing
in /std/body/wiz_position.c
private string wiz_position;
in /std/body/status_line.c // seem useless ?
in /std/body/mailbase.c
private string          default_mailer;
private static string * valid_mailers = 
private static object   mailer;
in /std/body/newsdata.c
private mapping news_data = ([]);
in /std/body/cmd.c
private static string * nonsense_msgs;
in /std/body/wizfuncs.c
private int ilog_time;
private string my_home;
in /std/body/help.c
mapping topic_to_time = ([ ]);
in /secure/modules/m_access.c
private static mixed privilege;
private static mixed unguarded_privilege;
private static mixed *security_handle;
in    /std/modules/m_input.c
private static object   input_user;
in /std/modules/m_smartmove.c
   /std/race.c
no private paras
in /std/body/time.c deleted
private mixed tzone;
in /std/body/quests.c // maybe delete ? deleted
string* quests;
int     points;
int     deaths;
    
    
