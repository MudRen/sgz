// GRID_ROOM
// this room just used by war field
inherit BASE_ROOM;
private string m_aid; // the area_id
private int m_x,m_y; // the grid_position

int is_gridroom() { return 1; }

void create_chars()
{
	string m_name;
        mixed list;
	int i;
	m_name=file_name();
	list=TROOP_D->check_troop("room",m_name);
	for(i=0;i<sizeof(list);++i)
		TROOP_D->put_troop(list[i],m_name);
}

void set_pos(mixed pos)
{
        m_x=pos[0];m_y=pos[1];
}

void set_aid(string p_id)
{
        m_aid=p_id;
}

int* query_pos()
{
        return ({m_x,m_y});
}
string query_str_pos() {
        return sprintf("%c%d",m_x+'A',m_y+1);
}

string query_aid()
{
        return m_aid;
}

int is_outdoors()
{
    return 1;
}

void mudlib_setup()
{
    ::mudlib_setup();
    add_id("battlefield");
}

string* get_long(string p_type, string pos, string soldier, string s_num, string s_color)
{
  int i,j, has_soldier;
  string *ret,*tmp,*wri;
  string f_name;
  string p_color;
  mapping m = (["©¦":"ns","©¸":"sw","©¼":"se","©°":"nw","©´":"ne","©¤":"we","¡ò":"shuai"]);

  tmp = ({"","","",""});
  has_soldier = 0;
  switch(p_type)
  {
    case "¡«":
    case "£®":
    case "¡Ä":
    case "£ª":
    case "¡á":
    case "¡ù":
      for(i=0;i<4;++i)
      {
          for(j=0;j<8;++j)
            if(random(3))
                tmp[i]+="¡¡";
            else
                tmp[i]+=p_type;
      }
      break;
    case "©¦":
    case "©¸":
    case "©¼":
    case "©°":
    case "©´":
    case "©¤":
    case "¡ò":
        f_name=PPIC+"wall"+m[p_type]+".pic";
        for(i=0;i<4;++i)
        {
                tmp[i]=read_file(f_name,i+1,1); 
                tmp[i]=tmp[i][0..15];
        }
        break;
    default:
        f_name=PPIC+"void.pic";
        for(i=0;i<4;++i)
        {
                tmp[i]=read_file(f_name,i+1,1); 
                tmp[i]=tmp[i][0..15];
        }
    }

    if ( soldier == "£Á" || soldier == "£Ä" || soldier == "£Í" ) {
	has_soldier = 1;
	tmp[0] = tmp[0][0..3] + repeat_string(soldier, 4) + tmp[0][12..15];
        tmp[1] = tmp[1][0..3] + soldier + s_num + s_num + soldier + tmp[1][12..15];
	tmp[2] = tmp[2][0..3] + soldier + s_num + s_num + soldier + tmp[2][12..15];
	tmp[3] = tmp[3][0..3] + repeat_string(soldier, 4) + tmp[3][12..15];
    }

    switch(pos)
    {
	case "c" : ret=tmp; break;
	case "nw" : ret=({tmp[0][0..7], tmp[1][0..7]});break;
	case "n" : ret=({tmp[0],tmp[1]});break;
	case "ne" : ret=({tmp[0][8..15], tmp[1][8..15]});break;
	case "w" : ret=({tmp[0][0..7],tmp[1][0..7],tmp[2][0..7],tmp[3][0..7]});break;
	case "e" : ret=({tmp[0][8..15],tmp[1][8..15],tmp[2][8..15],tmp[3][8..15]});break;
	case "sw" : ret=({tmp[2][0..7],tmp[3][0..7]});break;
	case "s" : ret=({tmp[2],tmp[3]});break;
	case "se" : ret=({tmp[2][8..15],tmp[3][8..15]});break;
	default : ret=tmp; 
    }

    wri = allocate(sizeof(ret));
    for( i = 0; i < sizeof(wri); i++)
	wri[i] = ret[i];
    p_color=MAP_D->get_color(p_type);

    if ( !has_soldier ) {
	for( i = 0; i < sizeof(wri); i++ )
	    wri[i] = p_color + wri[i];
	return wri;
    }
    else {
      for( i = 0; i < sizeof(wri); i++ ) {
	wri[i] = "";
     	for( j = 0; j < 32; j += 2 ) {
            if ( ret[i][j..(j+1)] == "£Ä" || ret[i][j..(j+1)] == "£Á" || 
		 ret[i][j..(j+1)] == "£Í" || 
                 (member_array(ret[i][j..(j+1)], CHINESE_D->s_array())+1) ) {
		wri[i] += s_color + ret[i][j..(j+1)];
	    }
	    else
		wri[i] += p_color + ret[i][j..(j+1)];
	}
      }
    }
    return wri;
}
string * troop_infoa(int x,int y, string side) {
  mixed troop;
  int n, i;
  string array troopinfo = ({ "", "", "" });	// troop_type, troop_number, troop_color
  string mside;
  troop = MAP_D->get_map_cell(m_aid, y, x,"t");

    n = 0;
    for(i = 0; i < sizeof(troop); i++) {
	mside=TROOP_D->get_troops(troop[i],"side");
	if((side!="b")&&(mside!=side)&&(!TROOP_D->get_troops(troop[i],"canbeseen")))
		continue;
	n += TROOP_D->get_soldier_total_number(troop[i]);
    }
	if(n>0) {
	    troopinfo[0] = TROOP_D->get_troop_side(troop[0]);
	    troopinfo[1] = TROOP_D->chinese_soldier_number(n);
	    if ( troopinfo[0] == "£Á" )
		troopinfo[2] = "%^H_RED%^";
	    else if ( troopinfo[0] == "£Ä" )
		troopinfo[2] = "%^H_BLUE%^";
	    else
		troopinfo[2] = "";
	    if ( x == m_x && y == m_y ) {
		troopinfo[0] = "£Í";
	//troopinfo[2] = "%^RED%^";
	    }
  	}
  else {
    troopinfo[0] = ""; troopinfo[1] = ""; troopinfo[2] = "";
  }
  return troopinfo;

}
string * troop_info(int x, int y) {
	return troop_infoa(x,y,"b"); // both side
}


mixed long()
{
  int i, j;
  string cell_type;
  string* p_tmp;
  string* p_disp;
  string * tinfo;
  string p_ret;
	object o=this_body();
	object env;
	int troop_id;
	string p_side;
	if(!objectp(o)) return "can't find you :)";
	env = environment(o);
	if( !env->is_troop() ) return "not in troop, can't see";

	troop_id = env->get_id();
	p_side = TROOP_D->get_troops( troop_id, "side");		

  p_disp=({"","","","","","","","","","","","","","","",""});

  //string * disp = explode(::long(), '\n');


  // column 1
  i = -2;

  tinfo = troop_infoa(m_x+i, m_y-2,p_side);
  cell_type = MAP_D->get_map_cell(m_aid,m_y-2,m_x+i,"m");
  if (!cell_type) cell_type = "xx";
  p_tmp = get_long(cell_type, "se", tinfo[0], tinfo[1], tinfo[2]);
  p_disp[0]=p_tmp[0];p_disp[1]=p_tmp[1];			// 0,1

  for(j = -1; j <= 1; j++) {
    tinfo = troop_infoa(m_x+i, m_y+j,p_side);
    cell_type = MAP_D->get_map_cell(m_aid,m_y+j,m_x+i, "m");
    if (!cell_type) cell_type = "xx";
    p_tmp = get_long(cell_type, "e", tinfo[0], tinfo[1], tinfo[2]);
    p_disp[(j+1)*4+2] = p_tmp[0];                           	// 2,6,10
    p_disp[(j+1)*4+3] = p_tmp[1];                           	// 3,7,11
    p_disp[(j+1)*4+4] = p_tmp[2];                          	// 4,8,12
    p_disp[(j+1)*4+5] = p_tmp[3];                           	// 5,9,13
  }

  tinfo = troop_infoa(m_x+i, m_y+2,p_side);
  cell_type = MAP_D->get_map_cell(m_aid,m_y+2,m_x+i,"m");
  if (!cell_type) cell_type = "xx";
  p_tmp = get_long(cell_type, "ne", tinfo[0], tinfo[1], tinfo[2]);
  p_disp[14]=p_tmp[0];p_disp[15]=p_tmp[1];			// 14,15

  // columns 2,3,4
  for(i = -1; i <= 1; i++) {

    tinfo = troop_infoa(m_x+i, m_y-2,p_side);
    cell_type = MAP_D->get_map_cell(m_aid,m_y-2,m_x+i,"m");
    if (!cell_type) cell_type = "xx";
    p_tmp = get_long(cell_type, "s", tinfo[0], tinfo[1], tinfo[2]);
    p_disp[0]+=p_tmp[0];p_disp[1]+=p_tmp[1];			// 0,1


    for(j = -1; j <= 1; j++) {
        tinfo = troop_infoa(m_x+i, m_y+j,p_side);
        cell_type = MAP_D->get_map_cell(m_aid,m_y+j,m_x+i,"m"); 
        if (!cell_type) cell_type = "xx";
        p_tmp = get_long(cell_type, "c", tinfo[0], tinfo[1], tinfo[2]);
        p_disp[(j+1)*4+2] += p_tmp[0];                      	// 2,6,10
        p_disp[(j+1)*4+3] += p_tmp[1];                      	// 3,7,11
        p_disp[(j+1)*4+4] += p_tmp[2];                      	// 4,8,12
        p_disp[(j+1)*4+5] += p_tmp[3];                      	// 5,9,13
    }

    tinfo = troop_infoa(m_x+i, m_y+2,p_side);
    cell_type = MAP_D->get_map_cell(m_aid,m_y+2,m_x+i,"m"); 
    if (!cell_type) cell_type = "xx";
    p_tmp = get_long(cell_type, "n", tinfo[0], tinfo[1], tinfo[2]);
    p_disp[14]+=p_tmp[0];p_disp[15]+=p_tmp[1];			// 14,15
  }

  // column 5
  i = 2;

  tinfo = troop_infoa(m_x+i, m_y-2,p_side);
  cell_type = MAP_D->get_map_cell(m_aid,m_y-2,m_x+i,"m");
  if (!cell_type) cell_type = "xx";
  p_tmp = get_long(cell_type, "sw", tinfo[0], tinfo[1], tinfo[2]);
  p_disp[0]+=p_tmp[0];p_disp[1]+=p_tmp[1];                      // 0,1
 
  for(j = -1; j <= 1; j++) {
    tinfo = troop_infoa(m_x+i, m_y+j,p_side);
    cell_type = MAP_D->get_map_cell(m_aid,m_y+j,m_x+i, "m");
    if (!cell_type) cell_type = "xx";
    p_tmp = get_long(cell_type, "w", tinfo[0], tinfo[1], tinfo[2]);
    p_disp[(j+1)*4+2] += p_tmp[0];                              // 2,6,10
    p_disp[(j+1)*4+3] += p_tmp[1];                              // 3,7,11
    p_disp[(j+1)*4+4] += p_tmp[2];                              // 4,8,12
    p_disp[(j+1)*4+5] += p_tmp[3];                              // 5,9,13
  } 
  
  tinfo = troop_infoa(m_x+i, m_y+2,p_side);
  cell_type = MAP_D->get_map_cell(m_aid,m_y+2,m_x+i,"m");
  if (!cell_type) cell_type = "xx";
  p_tmp = get_long(cell_type, "nw", tinfo[0], tinfo[1], tinfo[2]);
  p_disp[14]+=p_tmp[0];p_disp[15]+=p_tmp[1];                    // 14,15

  p_ret = p_disp[0];
  for(i = 1; i < 16; i++) {
      p_ret = p_ret + "\n" + p_disp[i];
  }
  p_ret = p_ret + "%^RESET%^\n";
  return p_ret;

  // return ::long();						// wiz_only
}
